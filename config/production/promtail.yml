# Promtail configuration for log collection
server:
  http_listen_port: 9080
  grpc_listen_port: 0

positions:
  filename: /tmp/positions.yaml

clients:
  - url: http://loki:3100/loki/api/v1/push

scrape_configs:
  # Application logs
  - job_name: church-management-app
    static_configs:
      - targets:
          - localhost
        labels:
          job: church-management-app
          environment: production
          __path__: /var/log/app/*.log

    pipeline_stages:
      # Parse timestamp
      - timestamp:
          source: timestamp
          format: RFC3339Nano

      # Extract log level
      - regex:
          expression: '(?P<level>INFO|WARN|ERROR|DEBUG|FATAL)'
      - labels:
          level:

      # Extract request ID for tracing
      - regex:
          expression: 'request_id=(?P<request_id>[a-zA-Z0-9-]+)'
      - labels:
          request_id:

      # Extract user ID
      - regex:
          expression: 'user_id=(?P<user_id>\d+)'
      - labels:
          user_id:

      # Extract endpoint
      - regex:
          expression: 'endpoint="(?P<endpoint>[^"]+)"'
      - labels:
          endpoint:

      # Extract response time
      - regex:
          expression: 'response_time=(?P<response_time>\d+\.?\d*)ms'
      - labels:
          response_time:

  # Docker container logs
  - job_name: docker-containers
    static_configs:
      - targets:
          - localhost
        labels:
          job: docker-containers
          environment: production
          __path__: /var/lib/docker/containers/*/*.log

    pipeline_stages:
      # Parse Docker JSON logs
      - json:
          expressions:
            output: log
            stream: stream
            time: time

      # Extract container information
      - regex:
          source: filename
          expression: '/var/lib/docker/containers/(?P<container_id>[^/]+)/.*'
      - labels:
          container_id:

      # Set timestamp
      - timestamp:
          source: time
          format: RFC3339Nano

      # Add stream label
      - labels:
          stream:

      # Extract application-specific fields from log content
      - match:
          selector: '{job="docker-containers"}'
          stages:
            - regex:
                expression: '(?P<level>INFO|WARN|ERROR|DEBUG|FATAL)'
            - labels:
                level:

  # System logs
  - job_name: system-logs
    static_configs:
      - targets:
          - localhost
        labels:
          job: system-logs
          environment: production
          __path__: /var/log/syslog

    pipeline_stages:
      - regex:
          expression: '(?P<timestamp>\w+ \d+ \d+:\d+:\d+) (?P<hostname>\S+) (?P<service>\S+)(\[(?P<pid>\d+)\])?: (?P<message>.*)'
      - labels:
          hostname:
          service:
          pid:
      - timestamp:
          source: timestamp
          format: Jan 02 15:04:05

  # Nginx/Traefik access logs
  - job_name: traefik-access
    static_configs:
      - targets:
          - localhost
        labels:
          job: traefik-access
          environment: production
          __path__: /var/log/traefik/*.log

    pipeline_stages:
      # Parse Traefik access logs
      - regex:
          expression: '(?P<remote_addr>\S+) - (?P<remote_user>\S+) \[(?P<time_local>[^\]]+)\] "(?P<method>\S+) (?P<request>\S+) (?P<protocol>\S+)" (?P<status>\d+) (?P<body_bytes_sent>\d+) "(?P<http_referer>[^"]*)" "(?P<http_user_agent>[^"]*)" (?P<request_time>\d+\.?\d*)'
      
      - labels:
          method:
          status:
          remote_addr:
      
      - timestamp:
          source: time_local
          format: '02/Jan/2006:15:04:05 -0700'

  # Error logs
  - job_name: error-logs
    static_configs:
      - targets:
          - localhost
        labels:
          job: error-logs
          environment: production
          __path__: /var/log/app/error.log

    pipeline_stages:
      - json:
          expressions:
            timestamp: timestamp
            level: level
            message: message
            stack_trace: stack_trace
            request_id: request_id
            user_id: user_id
            endpoint: endpoint

      - labels:
          level:
          request_id:
          user_id:
          endpoint:

      - timestamp:
          source: timestamp
          format: RFC3339Nano

# Limits
limits_config:
  readline_rate: 10000
  readline_burst: 20000
