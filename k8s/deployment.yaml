apiVersion: v1
kind: Namespace
metadata:
  name: church-management
  labels:
    app: church-management
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: church-management-config
  namespace: church-management
data:
  DB_HOST: "postgres-service"
  DB_PORT: "5432"
  DB_NAME: "church_management"
  DB_USER: "postgres"
  APP_HOST: "0.0.0.0"
  APP_PORT: "8080"
  LUA_ENV: "production"
---
apiVersion: v1
kind: Secret
metadata:
  name: church-management-secrets
  namespace: church-management
type: Opaque
data:
  # Base64 encoded password (change this!)
  DB_PASSWORD: cGFzc3dvcmQ=  # "password" in base64
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-pvc
  namespace: church-management
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
  namespace: church-management
  labels:
    app: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
      - name: postgres
        image: postgres:15-alpine
        ports:
        - containerPort: 5432
        env:
        - name: POSTGRES_DB
          valueFrom:
            configMapKeyRef:
              name: church-management-config
              key: DB_NAME
        - name: POSTGRES_USER
          valueFrom:
            configMapKeyRef:
              name: church-management-config
              key: DB_USER
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: church-management-secrets
              key: DB_PASSWORD
        volumeMounts:
        - name: postgres-storage
          mountPath: /var/lib/postgresql/data
        livenessProbe:
          exec:
            command:
            - pg_isready
            - -U
            - postgres
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          exec:
            command:
            - pg_isready
            - -U
            - postgres
          initialDelaySeconds: 5
          periodSeconds: 5
      volumes:
      - name: postgres-storage
        persistentVolumeClaim:
          claimName: postgres-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: postgres-service
  namespace: church-management
spec:
  selector:
    app: postgres
  ports:
  - port: 5432
    targetPort: 5432
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: church-management-app
  namespace: church-management
  labels:
    app: church-management-app
spec:
  replicas: 2
  selector:
    matchLabels:
      app: church-management-app
  template:
    metadata:
      labels:
        app: church-management-app
    spec:
      initContainers:
      - name: wait-for-postgres
        image: postgres:15-alpine
        command:
        - sh
        - -c
        - |
          until pg_isready -h postgres-service -p 5432 -U postgres; do
            echo "Waiting for PostgreSQL..."
            sleep 2
          done
        env:
        - name: PGPASSWORD
          valueFrom:
            secretKeyRef:
              name: church-management-secrets
              key: DB_PASSWORD
      containers:
      - name: app
        image: YOUR_DOCKER_USERNAME/church-management:latest
        ports:
        - containerPort: 8080
        env:
        - name: DB_HOST
          valueFrom:
            configMapKeyRef:
              name: church-management-config
              key: DB_HOST
        - name: DB_PORT
          valueFrom:
            configMapKeyRef:
              name: church-management-config
              key: DB_PORT
        - name: DB_NAME
          valueFrom:
            configMapKeyRef:
              name: church-management-config
              key: DB_NAME
        - name: DB_USER
          valueFrom:
            configMapKeyRef:
              name: church-management-config
              key: DB_USER
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: church-management-secrets
              key: DB_PASSWORD
        - name: APP_HOST
          valueFrom:
            configMapKeyRef:
              name: church-management-config
              key: APP_HOST
        - name: APP_PORT
          valueFrom:
            configMapKeyRef:
              name: church-management-config
              key: APP_PORT
        - name: LUA_ENV
          valueFrom:
            configMapKeyRef:
              name: church-management-config
              key: LUA_ENV
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 5
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "500m"
---
apiVersion: v1
kind: Service
metadata:
  name: church-management-service
  namespace: church-management
spec:
  selector:
    app: church-management-app
  ports:
  - port: 80
    targetPort: 8080
  type: LoadBalancer
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: church-management-ingress
  namespace: church-management
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  tls:
  - hosts:
    - your-domain.com
    secretName: church-management-tls
  rules:
  - host: your-domain.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: church-management-service
            port:
              number: 80

