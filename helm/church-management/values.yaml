# Default values for church-management
replicaCount: 2

image:
  repository: your-docker-username/church-management
  pullPolicy: IfNotPresent
  tag: "latest"

nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: true
  annotations: {}
  name: ""

podAnnotations: {}

podSecurityContext: {}

securityContext: {}

service:
  type: LoadBalancer
  port: 80
  targetPort: 8080

ingress:
  enabled: true
  className: "nginx"
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
    nginx.ingress.kubernetes.io/rewrite-target: /
  hosts:
    - host: church-management.local
      paths:
        - path: /
          pathType: Prefix
  tls:
    - secretName: church-management-tls
      hosts:
        - church-management.local

resources:
  limits:
    cpu: 500m
    memory: 512Mi
  requests:
    cpu: 100m
    memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 2
  maxReplicas: 10
  targetCPUUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

# Application configuration
app:
  environment: production
  host: "0.0.0.0"
  port: 8080

# PostgreSQL configuration
postgresql:
  enabled: true
  auth:
    postgresPassword: "change-this-password"
    database: "church_management"
    username: "postgres"
  primary:
    persistence:
      enabled: true
      size: 10Gi
    resources:
      requests:
        memory: 256Mi
        cpu: 100m
      limits:
        memory: 512Mi
        cpu: 500m

# External PostgreSQL (if not using built-in)
externalDatabase:
  enabled: false
  host: ""
  port: 5432
  database: "church_management"
  username: "postgres"
  password: ""

# Health checks
healthcheck:
  enabled: true
  livenessProbe:
    initialDelaySeconds: 30
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 3
  readinessProbe:
    initialDelaySeconds: 10
    periodSeconds: 5
    timeoutSeconds: 3
    failureThreshold: 3
