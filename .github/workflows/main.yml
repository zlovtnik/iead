name: Church Management CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

# Required permissions for security scanning and package publishing
permissions:
  contents: read
  packages: write
  security-events: write
  actions: read
  id-token: write

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Lua
        uses: leafo/gh-actions-lua@v9
        with:
          luaVersion: "5.4"
      
      - name: Set up LuaRocks
        uses: leafo/gh-actions-luarocks@v4
        
      - name: Install dependencies
        run: |
          luarocks install luasql-sqlite3
          luarocks install lua-cjson
          luarocks install luasocket
          luarocks install --only-deps church-management-1.0-1.rockspec
      
      - name: Initialize database
        run: lua -e "require('src.db.schema').init()"
      
      - name: Run tests
        run: lua -e "require('src.tests.run_all')"

  build:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Lua
        uses: leafo/gh-actions-lua@v9
        with:
          luaVersion: "5.4"
      
      - name: Set up LuaRocks
        uses: leafo/gh-actions-luarocks@v4
      
      - name: Build application
        run: ./build.sh --no-docker
      
      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: church-management-dist
          path: dist/

  docker:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/${{ github.repository }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=sha,format=short
      
      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: Dockerfile.production
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy:
    needs: docker
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    steps:
      - name: Deploy to production
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USERNAME }}
          key: ${{ secrets.DEPLOY_KEY }}
          port: ${{ secrets.DEPLOY_PORT }}
          script: |
            cd /opt/church-management
            docker-compose -f docker-compose.production.yml pull
            docker-compose -f docker-compose.production.yml up -d
